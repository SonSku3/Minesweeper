This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-10-29T15:39:04.699Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.vs/Saper3/v17/DocumentLayout.backup.json
.vs/Saper3/v17/DocumentLayout.json
Saper3.sln
Saper3/Board.cpp
Saper3/Board.h
Saper3/Debug/Saper3.tlog/Saper3.lastbuildstate
Saper3/Main.cpp
Saper3/Saper3.sln
Saper3/Saper3.vcxproj
Saper3/Saper3.vcxproj.filters
Saper3/Saper3.vcxproj.user
Saper3/state.cpp
Saper3/state.h
Saper3/Tile.cpp
Saper3/Tile.h
Saper3/x64/Debug/Saper3.exe.recipe
Saper3/x64/Debug/Saper3.tlog/Cl.items.tlog
Saper3/x64/Debug/Saper3.tlog/link.secondary.1.tlog
Saper3/x64/Debug/Saper3.tlog/Saper3.lastbuildstate
Saper3/x64/Release/Saper3.exe.recipe
Saper3/x64/Release/Saper3.tlog/Saper3.lastbuildstate

================================================================
Repository Files
================================================================

================
File: .vs/Saper3/v17/DocumentLayout.backup.json
================
{
  "Version": 1,
  "WorkspaceRootPath": "C:\\Users\\User\\source\\repos\\Saper3\\",
  "Documents": [
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Main.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Main.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Board.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Board.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Tile.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Tile.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    }
  ],
  "DocumentGroupContainers": [
    {
      "Orientation": 0,
      "VerticalTabListWidth": 256,
      "DocumentGroups": [
        {
          "DockedWidth": 200,
          "SelectedChildIndex": 0,
          "Children": [
            {
              "$type": "Document",
              "DocumentIndex": 0,
              "Title": "Main.cpp",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Main.cpp",
              "RelativeDocumentMoniker": "Saper3\\Main.cpp",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Main.cpp",
              "RelativeToolTip": "Saper3\\Main.cpp",
              "ViewState": "AgIAAAAAAAAAAAAAAAAAADgAAAAmAAAAAAAAAA==",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000677|",
              "WhenOpened": "2022-11-11T15:30:48.381Z",
              "IsPinned": true,
              "EditorCaption": ""
            },
            {
              "$type": "Bookmark",
              "Name": "ST:0:0:{e1b7d1f8-9b3c-49b1-8f4f-bfc63a88835d}"
            },
            {
              "$type": "Bookmark",
              "Name": "ST:0:0:{cce594b6-0c39-4442-ba28-10c64ac7e89f}"
            },
            {
              "$type": "Document",
              "DocumentIndex": 1,
              "Title": "Board.h",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.h",
              "RelativeDocumentMoniker": "Saper3\\Board.h",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.h",
              "RelativeToolTip": "Saper3\\Board.h",
              "ViewState": "AQIAAAAAAAAAAAAAAAAAABoAAAAAAAAA",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000680|",
              "WhenOpened": "2022-11-11T22:20:54.601Z"
            },
            {
              "$type": "Document",
              "DocumentIndex": 2,
              "Title": "Board.cpp",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.cpp",
              "RelativeDocumentMoniker": "Saper3\\Board.cpp",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.cpp",
              "RelativeToolTip": "Saper3\\Board.cpp",
              "ViewState": "AQIAABgAAAAAAAAAAAAAAEUAAAAtAAAA",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000677|",
              "WhenOpened": "2022-11-11T22:23:48.729Z"
            },
            {
              "$type": "Document",
              "DocumentIndex": 3,
              "Title": "Tile.h",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.h",
              "RelativeDocumentMoniker": "Saper3\\Tile.h",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.h",
              "RelativeToolTip": "Saper3\\Tile.h",
              "ViewState": "AQIAAAAAAAAAAAAAAAAAAA8AAAAAAAAA",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000680|",
              "WhenOpened": "2022-11-11T21:12:25.952Z"
            },
            {
              "$type": "Document",
              "DocumentIndex": 4,
              "Title": "Tile.cpp",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.cpp",
              "RelativeDocumentMoniker": "Saper3\\Tile.cpp",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.cpp",
              "RelativeToolTip": "Saper3\\Tile.cpp",
              "ViewState": "AQIAAB4AAAAAAAAAAAAAAD4AAAAAAAAA",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000677|",
              "WhenOpened": "2022-11-11T21:14:45.973Z"
            }
          ]
        }
      ]
    }
  ]
}

================
File: .vs/Saper3/v17/DocumentLayout.json
================
{
  "Version": 1,
  "WorkspaceRootPath": "C:\\Users\\User\\source\\repos\\Saper3\\",
  "Documents": [
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Board.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Main.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Main.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Board.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Tile.h||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    },
    {
      "AbsoluteMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}",
      "RelativeMoniker": "D:0:0:{DABD053E-E028-4C35-A89D-D2D65F6CCA30}|Saper3\\Saper3.vcxproj|solutionrelative:Saper3\\Tile.cpp||{D0E1A5C6-B359-4E41-9B60-3365922C2A22}"
    }
  ],
  "DocumentGroupContainers": [
    {
      "Orientation": 0,
      "VerticalTabListWidth": 256,
      "DocumentGroups": [
        {
          "DockedWidth": 200,
          "SelectedChildIndex": 4,
          "Children": [
            {
              "$type": "Document",
              "DocumentIndex": 1,
              "Title": "Main.cpp",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Main.cpp",
              "RelativeDocumentMoniker": "Saper3\\Main.cpp",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Main.cpp",
              "RelativeToolTip": "Saper3\\Main.cpp",
              "ViewState": "AgIAABUAAAAAAAAAAAAAADgAAAAmAAAAAAAAAA==",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000677|",
              "WhenOpened": "2022-11-11T15:30:48.381Z",
              "IsPinned": true,
              "EditorCaption": ""
            },
            {
              "$type": "Bookmark",
              "Name": "ST:0:0:{e1b7d1f8-9b3c-49b1-8f4f-bfc63a88835d}"
            },
            {
              "$type": "Bookmark",
              "Name": "ST:0:0:{cce594b6-0c39-4442-ba28-10c64ac7e89f}"
            },
            {
              "$type": "Document",
              "DocumentIndex": 2,
              "Title": "Board.h",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.h",
              "RelativeDocumentMoniker": "Saper3\\Board.h",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.h",
              "RelativeToolTip": "Saper3\\Board.h",
              "ViewState": "AQIAAAAAAAAAAAAAAAAAABoAAAAAAAAA",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000680|",
              "WhenOpened": "2022-11-11T22:20:54.601Z"
            },
            {
              "$type": "Document",
              "DocumentIndex": 0,
              "Title": "Board.cpp",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.cpp",
              "RelativeDocumentMoniker": "Saper3\\Board.cpp",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Board.cpp",
              "RelativeToolTip": "Saper3\\Board.cpp",
              "ViewState": "AgIAAAAAAAAAAAAAAAAAAEUAAAAtAAAAAAAAAA==",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000677|",
              "WhenOpened": "2022-11-11T22:23:48.729Z",
              "EditorCaption": ""
            },
            {
              "$type": "Document",
              "DocumentIndex": 3,
              "Title": "Tile.h",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.h",
              "RelativeDocumentMoniker": "Saper3\\Tile.h",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.h",
              "RelativeToolTip": "Saper3\\Tile.h",
              "ViewState": "AQIAAAAAAAAAAAAAAAAAAA8AAAAAAAAA",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000680|",
              "WhenOpened": "2022-11-11T21:12:25.952Z"
            },
            {
              "$type": "Document",
              "DocumentIndex": 4,
              "Title": "Tile.cpp",
              "DocumentMoniker": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.cpp",
              "RelativeDocumentMoniker": "Saper3\\Tile.cpp",
              "ToolTip": "C:\\Users\\User\\source\\repos\\Saper3\\Saper3\\Tile.cpp",
              "RelativeToolTip": "Saper3\\Tile.cpp",
              "ViewState": "AQIAAB4AAAAAAAAAAAAAAD4AAAAAAAAA",
              "Icon": "ae27a6b0-e345-4288-96df-5eaf394ee369.000677|",
              "WhenOpened": "2022-11-11T21:14:45.973Z"
            }
          ]
        }
      ]
    }
  ]
}

================
File: Saper3.sln
================
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.4.33103.184
MinimumVisualStudioVersion = 10.0.40219.1
Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "Saper3", "Saper3\Saper3.vcxproj", "{DABD053E-E028-4C35-A89D-D2D65F6CCA30}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x64.ActiveCfg = Debug|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x64.Build.0 = Debug|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x86.ActiveCfg = Debug|Win32
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x86.Build.0 = Debug|Win32
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x64.ActiveCfg = Release|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x64.Build.0 = Release|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x86.ActiveCfg = Release|Win32
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x86.Build.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {2446E8FF-7257-44B6-809C-B6DDBA51B77D}
	EndGlobalSection
EndGlobal

================
File: Saper3/Board.cpp
================
#include "Board.h"
#include <math.h>

void Board::setSize(int n, int m)
{
	size.x = n;
	size.y = m;
}

void Board::newBoard()
{
	vector.clear();
	Tile x;
	x.value = 0;
	x.is_hidden = true;
	std::vector<Tile> temp;
	for (int i = 0; i < size.x; i++)
	{
		temp.push_back(x);
	}
	for (int i = 0; i < size.y; i++)
	{
		vector.push_back(temp);
	}
}

void Board::fillBoard(int mines_num)
{
	for (int i = 0; i < mines_num; i++)
	{
		int x = rand() % size.y;
		int y = rand() % size.x;
		vector[x][y].value = -1;
	}
	std::vector<std::vector<int>> p = { {0, 1}, {0, -1}, {1, 0}, {-1, 0}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1} };
	for (int i = 0; i < size.y; i++)
	{
		for (int j = 0; j < size.x; j++)
		{
			if (vector[i][j].value != -1)
			{
				int sum = 0;
				for (int k = 0; k < p.size(); k++)
				{
					int i_n = i + p[k][0];
					int j_n = j + p[k][1];
					
					if (i_n >= 0 && i_n < size.y && j_n >= 0 && j_n < size.x)
					{
						if (vector[i_n][j_n].value == -1)
						{
							sum++;
						}
					}
				}
				vector[i][j].value = sum;
			}
			vector[i][j].setTextureFromAtlas();
			sf::Vector2u textureSize = vector[i][j].texture.getSize();
			textureSize.x /= 4;
			textureSize.y /= 4;
			vector[i][j].sprite.setPosition(j * textureSize.x, i * textureSize.y);
		}
	}
}

sf::Vector2i Board::getPosOfTile(int x, int y)
{
	int i = int(x / vector[0][0].textureSize.x);
	int j = int(y / vector[0][0].textureSize.y);
	sf::Vector2i pos = { i, j };
	return pos;
}

void Board::updateTextures()
{
	for (int i = 0; i < size.y; i++)
	{
		for (int j = 0; j < size.x; j++)
		{
			vector[i][j].setTextureFromAtlas();
		}
	}
}

bool Board::neighbouring(int y, int x, int value)
{
	std::vector<std::vector<int>> p = { {0, 1}, {0, -1}, {1, 0}, {-1, 0}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1} };
	for (int k = 0; k < p.size(); k++)
	{
		if (y + p[k][0] >= 0 && y + p[k][0] < size.y && x + p[k][1] >= 0 && x + p[k][1] < size.x)
		{
			if (vector[y + p[k][0]][x + p[k][1]].value == value)
			{
				return true;
			}
		}
	}
	return false;
}

void Board::floodFill(int y, int x)
{
	if (x < 0 || x >= size.x || y < 0 || y >= size.y)
	{
		return;
	}
	if (neighbouring(y, x, 0) == false)
	{
		return;
	}
	if (vector[y][x].is_hidden == false)
	{
		return;
	}
	vector[y][x].is_hidden = false;

	floodFill(y + 1, x);
	floodFill(y - 1, x);
	floodFill(y, x + 1);
	floodFill(y, x - 1);
}

bool Board::checkForWin()
{
	for (int i = 0; i < size.y; i++)
	{
		for (int j = 0; j < size.x; j++)
		{
			if (vector[i][j].is_hidden && vector[i][j].value != -1)
			{
				return false;
			}
		}
	}
	return true;
}

void Board::endOfGame()
{
	for (int i = 0; i < size.y; i++)
	{
		for (int j = 0; j < size.x; j++)
		{
			vector[i][j].is_marked = false;
			vector[i][j].is_hidden = false;
		}
	}
}

void Board::updateBoard(sf::Vector2i pos)
{
	if (checkForWin() == true)
	{
		std::cout << "win" << std::endl;
		endOfGame();
	}

	if (vector[pos.y][pos.x].is_marked == true)
	{
		return;
	}
	else
	{
		if (vector[pos.y][pos.x].value == 0)
		{
			floodFill(pos.y, pos.x);
			vector[pos.y][pos.x].is_hidden = false;
		}
		else if (vector[pos.y][pos.x].value == -1)
		{
			std::cout << "Game over" << std::endl;
			vector[pos.y][pos.x].value = -2;
			for (int i = 0; i < size.y; i++)
			{
				for (int j = 0; j < size.x; j++)
				{
					vector[i][j].is_hidden = false;
				}
			}
		}
		else
		{
			vector[pos.y][pos.x].is_hidden = false;
		}
	}
	
	updateTextures();
}

void Board::updateBoardFlag(sf::Vector2i pos)
{
	if (vector[pos.y][pos.x].is_marked == false)
	{
		vector[pos.y][pos.x].is_marked = true;
	}
	else
	{
		vector[pos.y][pos.x].is_marked = false;
	}
	updateTextures();
}

================
File: Saper3/Board.h
================
#pragma once

#include <iostream>
#include <SFML/Graphics.hpp>
#include <vector>
#include "Tile.h"

class Board
{
public:
	std::vector<std::vector<Tile>> vector;
	sf::Vector2<int> size;

	void setSize(int n, int m);
	void newBoard();
	void fillBoard(int mines_num);
	sf::Vector2i getPosOfTile(int x, int y);
	void updateTextures();
	bool neighbouring(int y, int x, int value);
	void floodFill(int y, int x);
	void updateBoard(sf::Vector2i pos);
	void updateBoardFlag(sf::Vector2i pos);
	bool checkForWin();
	void endOfGame();
};

================
File: Saper3/Debug/Saper3.tlog/Saper3.lastbuildstate
================
PlatformToolSet=v143:VCToolArchitecture=Native32Bit:VCToolsVersion=14.34.31933:TargetPlatformVersion=10.0.19041.0:
Debug|Win32|C:\Users\User\source\repos\Saper3\|

================
File: Saper3/Main.cpp
================
#include <iostream>
#include <string>
#include <cstdlib>
#include <time.h>
#include <SFML/Graphics.hpp>
#include "Tile.h"
#include "Board.h"


int main()
{
    srand(time(NULL));

    bool firstClick = true;

    Board board;
    board.setSize(20, 20);
    board.newBoard();
    int mines = 50;
    board.fillBoard(mines);

    int height = board.vector[0][0].textureSize.x * board.size.y;
    int width = board.vector[0][0].textureSize.y * board.size.x;
    sf::RenderWindow window(sf::VideoMode(width, height), "Minesweeper");

    window.setKeyRepeatEnabled(false);

    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        if (event.type == sf::Event::MouseButtonPressed)
        {
            sf::Vector2i mousePos = board.getPosOfTile(event.mouseButton.x, event.mouseButton.y);
            if (firstClick)
            {
                firstClick = false;
                while (board.vector[mousePos.y][mousePos.x].value != 0)
                {
                    board.newBoard();
                    board.fillBoard(mines);
                    //std::cout << "generating" << std::endl;
                }
            }
            if (event.mouseButton.button == sf::Mouse::Right)
            {
                //std::cout << "tile x: " << mousePos.x << " " << "tile y: " << mousePos.y << std::endl;
                board.updateBoard(mousePos);
            }
            if (event.mouseButton.button == sf::Mouse::Left)
            {
                //std::cout << "tile x: " << mousePos.x << " " << "tile y: " << mousePos.y << std::endl;
                board.updateBoardFlag(mousePos);
            }
        }

        window.clear();
        for (int i = 0; i < board.size.x; i++)
        {
            for (int j = 0; j < board.size.y; j++)
            {
                window.draw(board.vector[j][i].sprite);
            }
        }
        window.display();
    }

    return 0;
}

================
File: Saper3/Saper3.sln
================
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.4.33103.184
MinimumVisualStudioVersion = 10.0.40219.1
Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "Saper3", "Saper3\Saper3.vcxproj", "{DABD053E-E028-4C35-A89D-D2D65F6CCA30}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x64.ActiveCfg = Debug|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x64.Build.0 = Debug|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x86.ActiveCfg = Debug|Win32
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Debug|x86.Build.0 = Debug|Win32
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x64.ActiveCfg = Release|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x64.Build.0 = Release|x64
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x86.ActiveCfg = Release|Win32
		{DABD053E-E028-4C35-A89D-D2D65F6CCA30}.Release|x86.Build.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {2446E8FF-7257-44B6-809C-B6DDBA51B77D}
	EndGlobalSection
EndGlobal

================
File: Saper3/Saper3.vcxproj
================
<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{dabd053e-e028-4c35-a89d-d2d65f6cca30}</ProjectGuid>
    <RootNamespace>Saper3</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IncludePath>C:\SFML-2.5.1\include;$(IncludePath)</IncludePath>
    <LibraryPath>C:\SFML-2.5.1\lib;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IncludePath>C:\SFML-2.5.1\include;$(IncludePath)</IncludePath>
    <LibraryPath>C:\SFML-2.5.1\lib;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>C:\SFML-2.5.1\include;$(IncludePath)</IncludePath>
    <LibraryPath>C:\SFML-2.5.1\lib;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>C:\SFML-2.5.1\include;$(IncludePath)</IncludePath>
    <LibraryPath>C:\SFML-2.5.1\lib;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>sfml-graphics-d.lib;sfml-window-d.lib;sfml-system-d.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>sfml-graphics.lib;sfml-window.lib;sfml-system.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>sfml-graphics-d.lib;sfml-window-d.lib;sfml-system-d.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>sfml-graphics.lib;sfml-window.lib;sfml-system.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="Board.cpp" />
    <ClCompile Include="Main.cpp" />
    <ClCompile Include="Tile.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Board.h" />
    <ClInclude Include="state.h" />
    <ClInclude Include="Tile.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>

================
File: Saper3/Saper3.vcxproj.filters
================
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="Pliki źródłowe">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;c++;cppm;ixx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="Pliki nagłówkowe">
      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
      <Extensions>h;hh;hpp;hxx;h++;hm;inl;inc;ipp;xsd</Extensions>
    </Filter>
    <Filter Include="Pliki zasobów">
      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Main.cpp">
      <Filter>Pliki źródłowe</Filter>
    </ClCompile>
    <ClCompile Include="Tile.cpp">
      <Filter>Pliki źródłowe</Filter>
    </ClCompile>
    <ClCompile Include="Board.cpp">
      <Filter>Pliki źródłowe</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Tile.h">
      <Filter>Pliki nagłówkowe</Filter>
    </ClInclude>
    <ClInclude Include="Board.h">
      <Filter>Pliki nagłówkowe</Filter>
    </ClInclude>
    <ClInclude Include="state.h">
      <Filter>Pliki nagłówkowe</Filter>
    </ClInclude>
  </ItemGroup>
</Project>

================
File: Saper3/Saper3.vcxproj.user
================
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup />
</Project>

================
File: Saper3/state.cpp
================
#include "state.h"

================
File: Saper3/state.h
================
#pragma once
class state
{
public:
	int state;

};

================
File: Saper3/Tile.cpp
================
#include "Tile.h"

void Tile::setTextureFromAtlas()
{
    texture.loadFromFile("Minesweeper_texture.png");
    sprite.setTexture(texture);
    textureSize = texture.getSize();
    textureSize.x /= 4;
    textureSize.y /= 4;
    
    if (is_marked == true)
    {
        sprite.setTextureRect(sf::IntRect(textureSize.x * 2, textureSize.y * 2, textureSize.x, textureSize.y));//flag
    }
    else if (is_hidden == true)
    {
        sprite.setTextureRect(sf::IntRect(textureSize.x, textureSize.y * 2, textureSize.x, textureSize.y));//hidden
    }
    else
    {
        switch (value)
        {
        case 0:
            sprite.setTextureRect(sf::IntRect(0, 0, textureSize.x, textureSize.y));//empty
            break;
        case 1:
            sprite.setTextureRect(sf::IntRect(textureSize.x, 0, textureSize.x, textureSize.y));//1
            break;
        case 2:
            sprite.setTextureRect(sf::IntRect(textureSize.x * 2, 0, textureSize.x, textureSize.y));//2
            break;
        case 3:
            sprite.setTextureRect(sf::IntRect(textureSize.x * 3, 0, textureSize.x, textureSize.y));//3
            break;
        case 4:
            sprite.setTextureRect(sf::IntRect(0, textureSize.y, textureSize.x, textureSize.y));//4
            break;
        case 5:
            sprite.setTextureRect(sf::IntRect(textureSize.x, textureSize.y, textureSize.x, textureSize.y));//5
            break;
        case 6:
            sprite.setTextureRect(sf::IntRect(textureSize.x * 2, textureSize.y, textureSize.x, textureSize.y));//6
            break;
        case 7:
            sprite.setTextureRect(sf::IntRect(textureSize.x * 3, textureSize.y, textureSize.x, textureSize.y));//7
            break;
        case 8:
            sprite.setTextureRect(sf::IntRect(0, textureSize.y * 2, textureSize.x, textureSize.y));//8
            break;
        case -1:
            sprite.setTextureRect(sf::IntRect(0, textureSize.y * 3, textureSize.x, textureSize.y));//mine
            break;
        case -2:
            sprite.setTextureRect(sf::IntRect(textureSize.x, textureSize.y * 3, textureSize.x, textureSize.y));//activated mine
            break;
        default:
            std::cout << "setTextureFromAtlas ERROR" << std::endl;
            break;
        }
    }
    //tile.setTextureRect(sf::IntRect(textureSize.x * 3, textureSize.y * 2, textureSize.x, textureSize.y));//red flag
}

================
File: Saper3/Tile.h
================
#pragma once
#include <iostream>
#include <SFML/Graphics.hpp>

class Tile
{
    
public:
    sf::Sprite sprite;
    int value;
    bool is_hidden;
    bool is_marked;
    sf::Texture texture;
    sf::Vector2u textureSize;
    sf::Vector2<int> position;

    void setTextureFromAtlas();
};

================
File: Saper3/x64/Debug/Saper3.exe.recipe
================
<?xml version="1.0" encoding="utf-8"?>
<Project>
  <ProjectOutputs>
    <ProjectOutput>
      <FullPath>C:\Users\User\source\repos\Saper3\x64\Debug\Saper3.exe</FullPath>
    </ProjectOutput>
  </ProjectOutputs>
  <ContentFiles />
  <SatelliteDlls />
  <NonRecipeFileRefs />
</Project>

================
File: Saper3/x64/Debug/Saper3.tlog/Cl.items.tlog
================
C:\Users\User\source\repos\Saper3\Saper3\Board.cpp;C:\Users\User\source\repos\Saper3\Saper3\x64\Debug\Board.obj
C:\Users\User\source\repos\Saper3\Saper3\Main.cpp;C:\Users\User\source\repos\Saper3\Saper3\x64\Debug\Main.obj
C:\Users\User\source\repos\Saper3\Saper3\Tile.cpp;C:\Users\User\source\repos\Saper3\Saper3\x64\Debug\Tile.obj

================
File: Saper3/x64/Debug/Saper3.tlog/link.secondary.1.tlog
================
^C:\USERS\USER\SOURCE\REPOS\SAPER3\SAPER3\X64\DEBUG\BOARD.OBJ|C:\USERS\USER\SOURCE\REPOS\SAPER3\SAPER3\X64\DEBUG\MAIN.OBJ|C:\USERS\USER\SOURCE\REPOS\SAPER3\SAPER3\X64\DEBUG\TILE.OBJ
C:\Users\User\source\repos\Saper3\Saper3\x64\Debug\Saper3.ilk

================
File: Saper3/x64/Debug/Saper3.tlog/Saper3.lastbuildstate
================
PlatformToolSet=v143:VCToolArchitecture=Native64Bit:VCToolsVersion=14.44.35207:TargetPlatformVersion=10.0.26100.0:
Debug|x64|C:\Users\User\source\repos\Saper3\|

================
File: Saper3/x64/Release/Saper3.exe.recipe
================
<?xml version="1.0" encoding="utf-8"?>
<Project>
  <ProjectOutputs>
    <ProjectOutput>
      <FullPath>C:\Users\User\source\repos\Saper3\x64\Release\Saper3.exe</FullPath>
    </ProjectOutput>
  </ProjectOutputs>
  <ContentFiles />
  <SatelliteDlls />
  <NonRecipeFileRefs />
</Project>

================
File: Saper3/x64/Release/Saper3.tlog/Saper3.lastbuildstate
================
PlatformToolSet=v143:VCToolArchitecture=Native64Bit:VCToolsVersion=14.34.31933:TargetPlatformVersion=10.0.19041.0:
Release|x64|C:\Users\User\source\repos\Saper3\|
